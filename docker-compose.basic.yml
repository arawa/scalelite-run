version: '3'

volumes:
  #postgres-data:
  redis-data:

services:
  #postgres:
  #  image: postgres:11-alpine
  #  container_name: postgres
  #  restart: unless-stopped
  #  environment:
  #    - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
  #  volumes:
  #    - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./data/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      #- ./data/certbot/conf/:/etc/letsencrypt
    command: ["redis-server", "--appendonly", "yes"]

  certbot:
    image: certbot/certbot
    #image: certbot/dns-ovh
    container_name: certbot
    volumes:
      - ./log/certbot/:/var/log/letsencrypt
      - ./data/certbot/conf/:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
      #- ./.ovhapi:/root/.ovhapi
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  scalelite-proxy:
    image: nginx:1.18
    container_name: scalelite-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOSTNAME=${URL_HOST:-xlab.blindside-dev.com}
    volumes:
      - ./log/proxy-nginx/:/var/log/nginx
      - ./data/proxy/nginx/sites.template.${DOCKER_PROXY_NGINX_TEMPLATE:-scalelite-proxy-protected}:/etc/nginx/sites.template
      - ./data/proxy/nginx/sites-common:/etc/nginx/sites-common
      - ./data/arawa/cert:/etc/ssl
      #- ./data/certbot/conf/:/etc/letsencrypt
      #- ./data/certbot/www/:/var/www/certbot
    depends_on:
      #- certbot
      - scalelite-api
      #- scalelite-recordings
    command: /bin/bash -c "envsubst '$$NGINX_HOSTNAME' < /etc/nginx/sites.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & exec nginx -g 'daemon off;'"

  scalelite-api:
    image: ${SCALELITE_DOCKER_IMAGE:-blindsidenetwks/scalelite:v1.1}
    container_name: scalelite-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
     # - DATABASE_URL=${DATABASE_URL:-postgres://postgres:password@postgres:5432/scalelite?pool=5}
      - RECORDING_DISABLED=${RECORDING_DISABLED-false}
      - SERVER_ID_IS_HOSTNAME=${SERVER_ID_IS_HOSTNAME-false}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT-true}
    volumes:
      - ./log/scalelite-api/:/srv/scalelite/log/
      - ${SCALELITE_RECORDING_DIR-/mnt/scalelite-recordings/var/bigbluebutton}:/var/bigbluebutton
    depends_on:
    #  - postgres
      - redis
    logging:
      driver: journald

  scalelite-poller:
    image: ${SCALELITE_DOCKER_IMAGE:-blindsidenetwks/scalelite:v1.1}
    container_name: scalelite-poller
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - SERVER_ID_IS_HOSTNAME=${SERVER_ID_IS_HOSTNAME-false}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT-true}
    volumes:
      - ./log/scalelite-poller/:/app/log
    command: /bin/sh -c "bin/start-poller"
    depends_on:
      - scalelite-api
    logging:
      driver: journald

